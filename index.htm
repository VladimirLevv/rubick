<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<title>Rubik's Cube Solver - Best Way to Solve Rubik Cube Online</title>
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0">
	<meta name="description" content="Here you can easily solve Rubik's Cube 3x3 Online!">
	<script type="text/javascript" src="./js/rubiks.js"></script>
	<script type="text/javascript" src="./js/solver.js"></script>
	<script type="text/javascript" src="./js/flat.js"></script>
	<link rel="stylesheet" type="text/css" href="./css/style.css">
	<link rel="stylesheet" type="text/css" href="./css/entireframework.min.css">
	<link href="https://rubik-cube-solver.com/favicon.ico" rel="icon" type="image/x-icon" />
	<meta name="google-site-verification" content="gLQfdZHAb9WXNlAEXan_R1sjvNX3XeJWexwhRxu2XuI" />
	<div id="fb-root"></div>
<script async defer crossorigin="anonymous" src="https://connect.facebook.net/uk_UA/sdk.js#xfbml=1&version=v8.0" nonce="dW1VOUor"></script>
</head>
<body>
	<nav class="nav" tabindex="-1" onclick="this.focus()">
		<div class="container">
			<a class="pagename current" href="https://rubik-cube-solver.com/">Rubik's Cube Solver</a>
		</div>
	</nav>
	<button class="btn-close btn btn-sm">Ã—</button>
	<div class='content'>
		<h1>Rubik's Cube Solver Online</h1>
		<section style='position:relative;'>
			<canvas id="cube" style='position:absolute;left:15px;top:15px;'>HTML5 CANVAS</canvas>
			<div id='controls'></div>
			<div id='flat-cube'></div>
		</section>
	</div>
	<div class="row">
    	<div class="col c10">
    		<div class="fb-comments" data-href="https://rubik-cube-solver.com/" data-numposts="10" data-width=""></div>
    	</div>
		</div>


	<script type="text/javascript">

		var cube, cube2;
		var flatCube, controls;

/**********************************
 * Main Loop
 **********************************/
 var run = function () {
 	cube.tick();
 	cube.render();
 	if(cube2){
 		cube2.tick();
 		cube2.render();
 	}
	// ---- animation loop ----
	requestAnimationFrame(run);
}
var oldWidth = null;
var reset = function () {
	var down = false;
	var parent = document.getElementById('cube').parentElement;
	var width = Math.min(parent.offsetWidth/2-30, parent.offsetHeight/5*3);
	console.log(width);
	if(width < 250){
		width = window.innerWidth/2-30;
	}
	if(width < 250){
		width = window.innerWidth - 30;
		down = true;
	}
	oldWidth = width;
	cube = new RubiksCube('cube', width);
	flatCube = new FlatCube('flat-cube', width, down);
	controls = new RubiksCubeControls('controls', cube, width);

	cube.flatCube = flatCube;
	flatCube.cube = cube;
};

var init = function () {
	reset();
	run();
}

window.addEventListener('load', function () {
	init();
	var logo = new Logo(document.getElementById('logo'), 60);
	logo.color = '#007fff';
	document.getElementsByClassName('accent-color')[0].style.color='#007fff';
	logo.animate();
	document.getElementById('logo').addEventListener('click', function(){
		logo.animate();
	});

	function loop(){
		if(cube.rotating){
			setTimeout(loop,3000);
			return;
		}
		scramble(20);
		solve();
		loop();
	}
	// loop();
}, false);
window.addEventListener('resize', function(){
	var down = false;
	var parent = document.getElementById('cube').parentElement;
	var width = Math.min(parent.offsetWidth/2-30, parent.offsetHeight/5*3);
	if(width < 250){
		width = window.innerWidth/2-30;
	}
	if(width < 250){
		width = window.innerWidth - 30;
		down = true;
	}
	if(width == oldWidth){
		return;
	}
	oldWidth = width;
	cube.updateSize(width);
	controls.setWidth(width);
	flatCube = new FlatCube('flat-cube', width, down);
	cube.flatCube = flatCube;
	flatCube.cube = cube;
	cube.update();
	flatCube.update();
});

var shift = function(){
	// cube.cx += 3*(Math.random()-1);
	// cube.cy += 3*(Math.random()-1);
	// cube.cz += 3*(Math.random()-1);
	xAutorotate = Math.random()/100;
	yAutorotate = Math.random()/100;
}

var solve = function(){
	var solver = new RubiksCubeSolver();
	if(cube.rotating){
		setTimeout(solve, 100);
		return;
	}
	shift();
	cube.makeMoves(solver.solve(cube.getState()));
	if(cube2)
		cube2.makeMoves(solver.solve(cube2.getState()));
};
</script>
</body>

</html>